name: 'Publish metadata and artifacts with hc-releases'
description: 'Use hc-releases to create metadata and upload files.'
inputs:
  private-tools-token:
    description: 'Token with permission to download bob and hc-releases'
    required: true
  product-name:
    description: 'Product name'
    required: true
  version:
    description: 'Product version'
    required: true
  source-env:
    description: 'Source env'
    required: false
    default: "staging"
  hc-releases-host:
    description: 'hc releases host'
    required: true
  hc-releases-key:
    description: 'hc releases api key'
    required: true
  hc-releases-source_env_key:
    description: 'hc releases source env api key'
    required: true
  skip-terraform-registry-sync:
    description: >
      Set to "true" to skip syncing providers to the Terraform registry.
      This value is not used for non terraform provider projects.
    required: false
    default: "false"
  hc-releases-terraform-registry-sync-token:
    description: 'Terraform registry sync token'
    required: false
runs:
  using: "composite"
  steps:
      - name: Setup hc-releases
        uses: hashicorp/setup-hc-releases@v2
        with:
          github-token: "${{ inputs.private-tools-token }}"
      - name: Promote artifacts and release meta-data
        shell: bash
        env:
          HC_RELEASES_HOST: ${{ inputs.hc-releases-host }}
          HC_RELEASES_KEY: ${{ inputs.hc-releases-key }}
          HC_RELEASES_SOURCE_ENV_KEY: ${{ inputs.hc-releases-source_env_key }}
          VERSION: ${{ inputs.version }}
          PRODUCT_NAME: ${{ inputs.product-name }}
          SOURCE_ENV: ${{ inputs.source-env }}
          SKIP_TERRAFORM_SYNC: ${{ inputs.skip-terraform-registry-sync }}
          HC_RELEASES_REGISTRY_SYNC_TOKEN: ${{ inputs.hc-releases-terraform-registry-sync-token }}
        run: |
          ${{ github.action_path }}/scripts/promote.sh
